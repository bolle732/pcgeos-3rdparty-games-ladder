/*
 ***************************************************************************
 * Copyright 2019 Andreas Bollhalder
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ***************************************************************************
 */


/*
 ***************************************************************************
 * Copyright (c) 2010-2011 by YoYu-Productions
 *
 * PROJECT:     GeoLadder
 * MODULE:      GOC definition file
 * FILE:        Art\appmon.goh
 *
 * AUTHOR:      Andreas Bollhalder
 ***************************************************************************
 */


/*
 ***************************************************************************
 *                  RESOURCE Icon
 ***************************************************************************
 */

@start ICON, data;

// Export without mask is corrupted for this format
@visMoniker LadderIcon15x15 =
{
  size = tiny;
  style = tool;
  color = color4;
  aspectRatio = normal;
  cachedSize = 15, 15;
  gstring
  {
    GSDrawBitmapAtCP(112),
    Bitmap(15, 15, BMC_PACKBITS, BMF_4BIT),
    0xfa, 0x00, 0x00, 0x0f, 0xfd, 0x00, 0x03, 0x0a,
    0x0a, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x08, 0xa8,
    0x0a, 0x2a, 0x00, 0x0f, 0x07, 0x00, 0x00, 0x0a,
    0x8a, 0x0a, 0x8a, 0x00, 0x0f, 0xfd, 0x00, 0x03,
    0x0a, 0x0a, 0x00, 0x0f, 0xfa, 0x00, 0x00, 0x0f,
    0x07, 0x0a, 0xa8, 0x00, 0x00, 0x0a, 0x0a, 0x00,
    0x0f, 0x07, 0x0a, 0x0a, 0x00, 0x00, 0x0a, 0x2a,
    0x00, 0x0f, 0x07, 0x0a, 0xa8, 0x00, 0x00, 0x0a,
    0x8a, 0x00, 0x0f, 0x00, 0x0a, 0xfe, 0x00, 0x03,
    0x0a, 0x0a, 0x00, 0x0f, 0xfa, 0x00, 0x00, 0x0f,
    0x07, 0x0a, 0xaa, 0x0a, 0xaa, 0x0a, 0xaa, 0x0a,
    0x0f, 0xfa, 0x00, 0x00, 0x0f, 0x07, 0x0a, 0xaa,
    0x0a, 0xaa, 0x0a, 0xaa, 0x0a, 0x0f, 0xfa, 0x00,
    0x00, 0x0f,
    GSEndString()
  }
}

@visMoniker LadderIcon48x30 =
{
  size = standard;
  style = icon;
  color = color4;
  aspectRatio = normal;
  cachedSize = 48, 30;
  gstring
  {
    GSDrawBitmapAtCP(312),
    Bitmap(48, 30, BMC_PACKBITS, BMF_4BIT),
    0xe9, 0x00, 0xfe, 0x00, 0x02, 0x0a, 0xaa, 0x80,
    0xfa, 0x00, 0x02, 0x0a, 0x00, 0xa0, 0xf9, 0x00,
    0xfe, 0x00, 0x02, 0x0a, 0x08, 0xa0, 0xfa, 0x00,
    0x02, 0x0a, 0x00, 0xa0, 0xf9, 0x00, 0xfe, 0x00,
    0x02, 0x0a, 0xaa, 0x80, 0xfa, 0x00, 0x02, 0x0a,
    0x88, 0xa0, 0xf9, 0x00, 0xfe, 0x00, 0x00, 0x0a,
    0xf8, 0x00, 0x02, 0x08, 0xaa, 0x80, 0xf9, 0x00,
    0xfe, 0x00, 0x00, 0x0a, 0xf7, 0x00, 0x00, 0xaa,
    0xf8, 0x00, 0xe9, 0x00, 0xec, 0x00, 0x02, 0x0a,
    0x20, 0x00, 0x05, 0x00, 0xaa, 0xaa, 0x0a, 0xaa,
    0xa0, 0xf2, 0x00, 0x02, 0x0a, 0x80, 0x00, 0xec,
    0x00, 0x02, 0x22, 0x22, 0x00, 0x05, 0x00, 0xaa,
    0xaa, 0x0a, 0xaa, 0xa0, 0xf2, 0x00, 0x02, 0xa0,
    0xa2, 0x00, 0xec, 0x00, 0x02, 0x82, 0x28, 0x00,
    0xe9, 0x00, 0xf4, 0x00, 0x02, 0x08, 0xaa, 0x80,
    0xfc, 0x00, 0x02, 0xa0, 0x0a, 0x00, 0xf4, 0x00,
    0x02, 0x0a, 0x00, 0xa0, 0xfc, 0x00, 0x02, 0xa0,
    0x0a, 0x00, 0xf4, 0x00, 0x02, 0x0a, 0x00, 0xa0,
    0xfc, 0x00, 0x02, 0xaa, 0xaa, 0x00, 0xf4, 0x00,
    0x02, 0x08, 0xaa, 0x80, 0xfc, 0x00, 0x02, 0xa0,
    0x0a, 0x00, 0xec, 0x00, 0x02, 0xa0, 0x0a, 0x00,
    0xfd, 0x00, 0x00, 0x0a, 0xee, 0x00, 0xfd, 0x00,
    0x05, 0x0a, 0x00, 0x8a, 0xa8, 0x00, 0xaa, 0xf6,
    0x00, 0x02, 0xa0, 0x0a, 0x00, 0xfd, 0x00, 0x06,
    0x0a, 0x00, 0xa0, 0x0a, 0x0a, 0x00, 0xa0, 0xf7,
    0x00, 0x02, 0xa0, 0x0a, 0x00, 0xfd, 0x00, 0x06,
    0x0a, 0x00, 0xa0, 0x0a, 0x0a, 0x00, 0xa0, 0xf7,
    0x00, 0x02, 0xaa, 0xaa, 0x00, 0xfd, 0x00, 0x05,
    0x0a, 0x00, 0x8a, 0xa8, 0x00, 0xaa, 0xf6, 0x00,
    0x02, 0xa0, 0x0a, 0x00, 0xec, 0x00, 0x02, 0xa0,
    0x0a, 0x00, 0xe9, 0x00, 0xec, 0x00, 0x02, 0xa0,
    0x0a, 0x00, 0x0c, 0x00, 0xaa, 0xaa, 0x0a, 0xaa,
    0xa0, 0xaa, 0xaa, 0x0a, 0xaa, 0xa0, 0xaa, 0xaa,
    0xf9, 0x00, 0x02, 0xa0, 0x0a, 0x00, 0xf4, 0x00,
    0x0a, 0x0a, 0xaa, 0xa0, 0xaa, 0xaa, 0x0a, 0xaa,
    0xa0, 0xaa, 0xaa, 0x00, 0x0c, 0x00, 0xaa, 0xaa,
    0x0a, 0xaa, 0xa0, 0xaa, 0xaa, 0x0a, 0xaa, 0xa0,
    0xaa, 0xaa, 0xf9, 0x00, 0x02, 0xa0, 0x0a, 0x00,
    0xe9, 0x00,
    GSEndString()
  }
}

@chunk PointerDef16 LadderGameCursor = {
  // Width, height, hot x, hot y
  16, 16, 0, 0,
  {  // Mask
    0x3c, 0x00, 0x7e, 0x00, 0xff, 0x00, 0xff, 0x80,
    0xff, 0x80, 0xff, 0x00, 0x7f, 0x80, 0x3f, 0xc0,
    0x1b, 0xe0, 0x01, 0xfc, 0x00, 0xfe, 0x00, 0x7f,
    0x00, 0x77, 0x00, 0x7e, 0x00, 0x3c, 0x00, 0x18
  },
  {  // Image (white border)
    0x3c, 0x00, 0x42, 0x00, 0x81, 0x00, 0x80, 0x80,
    0x80, 0x80, 0x81, 0x00, 0x42, 0x80, 0x24, 0x40,
    0x1a, 0x20, 0x01, 0x1c, 0x00, 0x82, 0x00, 0x4d,
    0x00, 0x55, 0x00, 0x5a, 0x00, 0x24, 0x00, 0x18
  }
};

@end ICON;


/* End of 'appmon.goh' */
